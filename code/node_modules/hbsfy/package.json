{
  "name": "hbsfy",
  "version": "1.0.0",
  "description": "Handlebars precompiler plugin for Browserify v2",
  "main": "index.js",
  "scripts": {
    "test": "sh test.sh"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/epeli/node-hbsfy"
  },
  "keywords": [
    "handlebars",
    "browserify",
    "v2",
    "js",
    "plugin",
    "transform"
  ],
  "author": {
    "name": "Esa-Matti Suuronen"
  },
  "license": "MIT",
  "dependencies": {
    "through": "~2.2.7"
  },
  "peerDependencies": {
    "handlebars": "~1.0.12"
  },
  "devDependencies": {
    "browserify": "~2.35.1",
    "concat-stream": "~1.1.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/epeli/node-hbsfy.png?branch=master)](https://travis-ci.org/epeli/node-hbsfy)\n\n# hbsfy\n\n[Handlebars][] precompiler plugin for [Browserify v2][] without magic.\n\nCompiles Handlebars templates to plain Javascript. The compiled templates only\nhave one copy of the Handlebars runtime so they are lightweight and fast!\n\n## Usage\n\nInstall hbsfy locally to your project:\n\n    npm install hbsfy\n\nHandlebars will be automatically installed as [peer dependency][].\n\nThen use it as Browserify transform module with `-t`:\n\n    browserify -t hbsfy main.js > bundle.js\n\nwhere main.js can be like:\n\n\n```javascript\nvar template = require(\"./template.hbs\");\ndocument.body.innerHTML = template({ name: \"Epeli\" });\n```\n\nand template.hbs:\n\n```html\n<h1>Hello {{name}}!</h1>\n```\n\n## Programmatic usage\n\nWhen compiling using Javascript code custom extensions\ncan be set:\n\n```javascript\nvar hbsfy = require(\"hbsfy\").configure({\n  extensions: [\"html\"]\n});\n\nvar browserify = require(\"browserify\");\nvar b = browserify(\"./index.js\");\nb.transform(hbsfy);\nb.bundle().pipe(fs.createWriteStream(\"./bundle.js\");\n```\n\n### Helpers\n\nTo register custom helpers just require the runtime use and `registerHelper` to\ncreate helper:\n\n```javascript\nvar Handlebars = require(\"hbsfy/runtime\");\nHandlebars.registerHelper(\"upcase\", function(s) {\n  return s.toUpperCase();\n});\n```\n\n### Partials\n\nPartials can be created by giving precompiled template to the `registerPartial`\nfunction.\n\n```javascript\nHandlebars.registerPartial('link', require(\"./partial.hbs\"));\n```\n\nCheckout the example folder for details.\n\n## Changelog\n\n### 1.0.0\n\n  - Remove `handlebars-runtime` dependency and depend directly on\n    the `handlebars` module as a [peer dependency][].\n    - Runtime must be now required with `require(\"hbsfy/runtime\")` instead of\n      `require(\"handlebars-runtime\")`.\n    - Thanks to @kamicane for teaching me how to do this.\n  - Option to configure template extensions\n\n## Browserify?\n\n<https://github.com/substack/node-browserify>\n\nFurther reading: <http://esa-matti.suuronen.org/blog/2013/03/22/journey-from-requirejs-to-browserify/>\n\n[Handlebars]: http://handlebarsjs.com/\n[Browserify v2]: https://github.com/substack/node-browserify\n[peer dependency]: http://blog.nodejs.org/2013/02/07/peer-dependencies/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/epeli/node-hbsfy/issues"
  },
  "homepage": "https://github.com/epeli/node-hbsfy",
  "_id": "hbsfy@1.0.0",
  "_from": "hbsfy@1.0.0"
}
